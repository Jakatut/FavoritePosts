{"version":3,"sources":["constants/PostActionTypes.js","actions/PostActions.js","components/SearchBar.js","constants/FavoriteActionTypes.js","actions/FavoriteActions.js","components/ResultCard.js","components/ResultBox.js","components/FavoritesModal.js","components/FavoritesButton.js","views/home.js","App.js","reportWebVitals.js","reducers/FavoritesReducer.js","reducers/PostsReducer.js","stores/index.js","security.js","index.js"],"names":["PostActionTypes","PostActions","mapPostData","payload","type","axios","require","useStyles","makeStyles","search","width","SearchBar","classes","dispatch","useDispatch","onSubredditSearch","event","get","process","value","then","data","getTop10HotPosts","placeholder","className","onKeyPress","e","FavoriteActionTypes","FavoriteActions","addFavorite","removeFavorite","getFavoriteIds","clearFavorites","toggleFavorites","resultBox","backgroundColor","borderRadius","margin","postContent","position","height","starSvg","fill","stroke","strokeWidth","ResultCard","props","useState","favorited","setFavorited","postId","setPostId","useEffect","Grid","container","alignItems","item","xs","Paper","author","title","upvotes","created_utc","viewBox","xmlns","onClick","d","overflowY","marginBlock","noResults","color","ResultBox","favorites","useSelector","state","ids","Box","length","map","post","id","defaultFavorited","includes","default","rootOpen","zIndex","rootClosed","display","closeButton","top","right","closeIcon","marginBottom","FavoritesModal","open","opened","favoritePostIds","favoritePosts","posts","buildFavoritesEndpoint","headers","catch","error","console","log","idList","join","CloseOutlined","resultBoxContainer","root","left","WebkitUserSelect","msUserSelect","userSelect","padding","starSVG","webkitAnimation","animation","FavoritesButton","Home","results","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","FavoritesReducer","action","getFavoritePostsFromLocalStorage","push","setFavoritePostsInLocalStorage","concat","filter","children","ups","localStorage","removeItem","JSON","parse","getItem","setItem","stringify","PostsReducer","rootReducer","combineReducers","PostReducer","store","createStore","corsAnywhere","cors_api_host","cors_api_url","slice","origin","window","location","protocol","host","XMLHttpRequest","prototype","args","call","arguments","targetOrigin","exec","toLowerCase","apply","this","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fd94666.chunk.js","sourcesContent":["//@flow\nconst MAP_POST_DATA = 'MAP_POST_DATA';\n\nexport const PostActionTypes = {\n    MAP_POST_DATA,\n};","//@flow\nimport {\n    PostActionTypes\n} from 'constants/PostActionTypes';\n\nconst mapPostData = (payload) => {\n    return { type: PostActionTypes.MAP_POST_DATA, payload };\n};\n\nconst PostActions = {\n    mapPostData,\n};\n\nexport default PostActions;","// @flow\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { useDispatch } from 'react-redux';\nimport PostActions from 'actions/PostActions';\nconst axios = require('axios');\n\nconst useStyles = makeStyles({\n\tsearch: {\n\t\twidth: '80%',\n\t},\n});\n\nconst SearchBar = () => {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst onSubredditSearch = (event) => {\n\t\treturn axios\n\t\t\t.get(\n\t\t\t\tprocess.env.REACT_APP_REDDIT_API_URL +\n\t\t\t\t\tevent.value +\n\t\t\t\t\t'r/hot.json?limit=10'\n\t\t\t)\n\t\t\t.then(({ data }) => {\n\t\t\t\tdispatch(PostActions.getTop10HotPosts(data));\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype='text'\n\t\t\tplaceholder='Search a subreddit'\n\t\t\tclassName={classes.search}\n\t\t\tonKeyPress={(e) => onSubredditSearch}\n\t\t></input>\n\t);\n};\n\nexport default SearchBar;\n","//@flow\nexport const ADD_FAVORITE = 'ADD_FAVORITE';\nexport const GET_FAVORITE_IDS = 'GET_FAVORITES';\nexport const CLEAR_FAVORITES = 'CLEAR_FAVORITES';\nexport const TOGGLE_FAVORITES = 'TOGGLE_FAVORITES';\nexport const REMOVE_FAVORITE = 'REMOVE_FAVORITE';\nexport const MAP_FAVORITE_POST_DATA  = 'MAP_FAVORITE_POST_DATA';\n\nexport const FavoriteActionTypes = {\n\tADD_FAVORITE,\n\tGET_FAVORITE_IDS,\n\tCLEAR_FAVORITES,\n\tTOGGLE_FAVORITES,\n\tREMOVE_FAVORITE,\n    MAP_FAVORITE_POST_DATA,\n};\n","//@flow\nimport {\n    FavoriteActionTypes\n} from 'constants/FavoriteActionTypes';\n\nconst addFavorite = (payload) => {\n\treturn { type: FavoriteActionTypes.ADD_FAVORITE, payload };\n};\n\nconst removeFavorite = (payload) => {\n\treturn { type: FavoriteActionTypes.REMOVE_FAVORITE, payload };\n};\n\nconst getFavoriteIds = (payload) => {\n\treturn { type: FavoriteActionTypes.GET_FAVORITE_IDS, payload };\n};\n\nconst clearFavorites = (payload) => {\n\treturn { type: FavoriteActionTypes.CLEAR_FAVORITES, payload };\n};\n\nconst toggleFavorites = (payload) => {\n\treturn { type: FavoriteActionTypes.TOGGLE_FAVORITES, payload };\n};\n\nconst mapPostData = (payload) => {\n    return {type: FavoriteActionTypes.MAP_FAVORITE_POST_DATA, payload};\n};\n\nconst FavoriteActions = {\n    addFavorite,\n    removeFavorite,\n    getFavoriteIds,\n    clearFavorites,\n    toggleFavorites,\n    mapPostData,\n};\n\nexport default FavoriteActions;","// @flow\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Paper } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport FavoriteActions from 'actions/FavoriteActions';\n\nconst useStyles = makeStyles({\n\tresultBox: {\n\t\tbackgroundColor: '#e3e3e3',\n\t\tborderRadius: '5px',\n\t\tmargin: '10px',\n\t},\n\tpostContent: {\n\t\tposition: 'relative',\n\t\theight: '50%',\n\t},\n\tstarSvg: {\n\t\tfill: 'white',\n\t\tstroke: 'black',\n\t\tstrokeWidth: 5,\n\t},\n});\n\nconst ResultCard = (props) => {\n\tconst [favorited, setFavorited] = useState(false);\n\tconst [postId, setPostId] = useState('');\n\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst onStarClick = () => {\n\t\tif (!favorited) {\n\t\t\tdispatch(FavoriteActions.addFavorite(postId));\n\t\t} else {\n\t\t\tdispatch(FavoriteActions.removeFavorite(postId));\n\t\t}\n\t\tsetFavorited(!favorited);\n\t};\n\n\tuseEffect(() => {\n\t\tsetPostId(props.postId);\n\t\tsetFavorited(props.favorited ?? false);\n\t}, [props]);\n\n\treturn (\n\t\t<Grid container alignItems='center'>\n\t\t\t<Grid item xs={11}>\n\t\t\t\t<Paper className={classes.resultBox}>\n\t\t\t\t\t<Grid container className={classes.postContent}>\n\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t<span>Posted by {props.author}</span>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={10}>\n\t\t\t\t\t\t\t<span>{props.title}</span>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t\t<span>{props.upvotes} upvotes</span>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<span>created at {props.created_utc}</span>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<svg\n\t\t\t\t\twidth='48'\n\t\t\t\t\theight='46'\n\t\t\t\t\tviewBox='0 0 48 46'\n\t\t\t\t\tfill='none'\n\t\t\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\t\t\tonClick={onStarClick}\n\t\t\t\t\tclassName={classes.starSvg}\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td='M24 3.23607L28.6618 17.5836L28.8863 18.2746H29.6129H44.6987L32.494 27.1418L31.9062 27.5689L32.1307 28.2599L36.7925 42.6074L24.5878 33.7401L24 33.3131L23.4122 33.7401L11.2075 42.6074L15.8693 28.2599L16.0938 27.5689L15.506 27.1418L3.30127 18.2746H18.3871H19.1137L19.3382 17.5836L24 3.23607Z'\n\t\t\t\t\t\tstroke='black'\n\t\t\t\t\t\tstrokeWidth='2'\n\t\t\t\t\t\tfill={favorited ? 'gold' : 'white'}\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default ResultCard;\n","// @flow\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport ResultCard from 'components/ResultCard';\nimport { Box } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n\tresultBox: {\n\t\twidth: '80%',\n\t\theight: '500px',\n\t\tbackgroundColor: 'white',\n\t\tborderRadius: '5px',\n\t\toverflowY: 'scroll',\n\t\tmargin: '0 auto',\n\t\tmarginBlock: '20px',\n\t},\n\tnoResults: {\n\t\tcolor: 'black',\n\t},\n});\n\nconst ResultBox = (props) => {\n\tconst classes = useStyles();\n\tconst favorites = useSelector((state) => state.favorites.ids);\n\n\treturn (\n\t\t<Box className={classes.resultBox}>\n\t\t\t{props.data?.length > 0 ? (\n\t\t\t\tprops.data.map((post) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ResultCard\n\t\t\t\t\t\t\tkey={post.id}\n                            postId={post.id}\n                            title={post.title}\n                            author={post.author}\n                            upvotes={post.upvotes}\n\t\t\t\t\t\t\tfavorited={props.defaultFavorited ?? favorites.includes(post.id)}\n\t\t\t\t\t\t></ResultCard>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t) : (\n\t\t\t\t<span className={classes.noResults}>No results found.</span>\n\t\t\t)}\n\t\t</Box>\n\t);\n};\n\nexport default ResultBox;\n","//@flow\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Paper, Box } from '@material-ui/core';\nimport ResultBox from './ResultBox';\nimport { makeStyles } from '@material-ui/styles';\nimport { CloseOutlined } from '@material-ui/icons';\nimport FavoriteActions from 'actions/FavoriteActions';\nconst axios = require('axios').default;\n\nconst useStyles = makeStyles({\n\trootOpen: {\n\t\tbackgroundColor: '#3C3C3C',\n\t\twidth: '75%',\n\t\tposition: 'fixed',\n\t\tzIndex: 1000,\n\t},\n\trootClosed: {\n\t\tdisplay: 'none',\n\t\tzIndex: -999,\n\t},\n\ttitle: {\n\t\tcolor: 'white',\n\t},\n\tcloseButton: {\n\t\tposition: 'absolute',\n\t\ttop: 10,\n\t\tright: 15,\n\t\tcolor: 'white',\n\t\twidth: '24px',\n\t\theight: '24px',\n\t\tborderRadius: '10px',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: 'gray',\n\t\t},\n\t\t'&:active': {\n\t\t\tbackgroundColor: '#282c34',\n\t\t},\n\t},\n\tcloseIcon: {\n\t\tmarginBottom: '20px',\n\t},\n});\n\nconst FavoritesModal = () => {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst open = useSelector((state) => state.favorites.opened);\n\tconst favoritePostIds = useSelector((state) => state.favorites.ids);\n\tconst favoritePosts = useSelector((state) => state.favorites.posts);\n\n\tuseEffect(() => {\n\t\tdispatch(FavoriteActions.getFavoriteIds());\n\t\tif (favoritePostIds.length > 0 && open) {\n\t\t\taxios\n\t\t\t\t.get(\n\t\t\t\t\tprocess.env.REACT_APP_REDDIT_API_URL +\n\t\t\t\t\t\t'by_id/' +\n\t\t\t\t\t\tbuildFavoritesEndpoint() +\n\t\t\t\t\t\t'.json',\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tdispatch(FavoriteActions.mapPostData(data));\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}\n\t}, [open]);\n\n\tconst buildFavoritesEndpoint = () => {\n        console.log(favoritePostIds);\n\t\tlet idList = 't3_' + favoritePostIds.join(',t3_')\n        console.log(idList);\n        return idList;\n\t};\n\n\treturn (\n\t\t<Paper className={open ? classes.rootOpen : classes.rootClosed}>\n\t\t\t<div\n\t\t\t\tclassName={classes.closeButton}\n\t\t\t\tonClick={() => dispatch(FavoriteActions.toggleFavorites())}\n\t\t\t>\n\t\t\t\t<CloseOutlined className={classes.closeIcon}></CloseOutlined>\n\t\t\t</div>\n\t\t\t<h1 className={classes.title}>Your Favorite Posts</h1>\n\t\t\t<Box className={classes.resultBoxContainer}>\n\t\t\t\t<ResultBox\n\t\t\t\t\tdata={favoritePosts}\n\t\t\t\t\tdefaultFavorited={true}\n\t\t\t\t></ResultBox>\n\t\t\t</Box>\n\t\t</Paper>\n\t);\n};\n\nexport default FavoritesModal;\n","//@flow\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport { Box } from '@material-ui/core';\nimport FavoriteActions from 'actions/FavoriteActions';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tposition: 'absolute',\n\t\ttop: 10,\n\t\tleft: 10,\n\t\tbackgroundColor: '#3C3C3C',\n\t\tborderRadius: 10,\n        \"&:hover\": {\n            backgroundColor: 'gray',\n        },\n        WebkitUserSelect: 'none',\n        msUserSelect: 'none',\n        userSelect: 'none',\n        padding: '5px',\n        display: 'flex',\n        alignItems: 'center',\n\t},\n\tstarSVG: {\n\t\twebkitAnimation: 'breathing 2s ease-out infinite',\n\t\tanimation: 'breathing 2s ease-out infinite',\n\t},\n});\n\nconst FavoritesButton = () => {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Box\n\t\t\tclassName={classes.root}\n\t\t\tonClick={() => dispatch(FavoriteActions.toggleFavorites())}\n\t\t>\n\t\t\t<svg\n\t\t\t\twidth='48'\n\t\t\t\theight='46'\n\t\t\t\tviewBox='0 0 48 46'\n\t\t\t\tfill='none'\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\t\tclassName={classes.starSVG}\n\t\t\t>\n\t\t\t\t<path\n\t\t\t\t\td='M24 3.23607L28.6618 17.5836L28.8863 18.2746H29.6129H44.6987L32.494 27.1418L31.9062 27.5689L32.1307 28.2599L36.7925 42.6074L24.5878 33.7401L24 33.3131L23.4122 33.7401L11.2075 42.6074L15.8693 28.2599L16.0938 27.5689L15.506 27.1418L3.30127 18.2746H18.3871H19.1137L19.3382 17.5836L24 3.23607Z'\n\t\t\t\t\tstroke='black'\n\t\t\t\t\tstrokeWidth='2'\n\t\t\t\t\tfill='gold'\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t\t<span>Favorite Posts</span>\n\t\t</Box>\n\t);\n};\n\nexport default FavoritesButton;\n","//@flow\nimport React, { useEffect } from 'react';\nimport SearchBar from 'components/SearchBar';\nimport ResultBox from 'components/ResultBox';\nimport FavoritesModal from 'components/FavoritesModal';\nimport FavoritesButton from 'components/FavoritesButton';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostActions from 'actions/PostActions';\nconst axios = require('axios').default;\n\nconst Home = () => {\n\tconst posts = useSelector((state) => state.posts.results);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(process.env.REACT_APP_REDDIT_API_URL + 'r/all/hot.json?limit=10')\n\t\t\t.then(({ data }) => {\n\t\t\t\tdispatch(PostActions.mapPostData(data));\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<header className='App-header'>\n\t\t\t<FavoritesButton></FavoritesButton>\n\t\t\t<FavoritesModal></FavoritesModal>\n\t\t\t<SearchBar></SearchBar>\n\t\t\t<ResultBox data={posts}></ResultBox>\n\t\t</header>\n\t);\n};\n\nexport default Home;\n","//@flow\nimport React from 'react';\nimport './App.css';\nimport Home from 'views/home';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Home></Home>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","//@flow\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//@flow\nimport { FavoriteActionTypes } from 'constants/FavoriteActionTypes';\n\nconst initialState = {\n\tids: [],\n\tposts: [],\n\topened: false,\n};\n\nconst FavoritesReducer = (state = initialState, action) => {\n\n\tconst addFavorite = () => {\n\t\tconsole.log('Adding favorite: ', action.payload);\n\t\t// Local storage only supports strings, convert json array to string.\n\t\tlet favoritePosts = getFavoritePostsFromLocalStorage() ?? [];\n        console.log('favoritePosts: ', favoritePosts);\n\t\tif (!favoritePosts.includes(action.payload)) {\n\t\t\tfavoritePosts.push(action.payload);\n\t\t}\n\t\tsetFavoritePostsInLocalStorage(favoritePosts);\n\t\treturn {\n\t\t\t...state,\n\t\t\tids: state.ids.concat(action.payload),\n\t\t};\n\t};\n\n\tconst removeFavorite = () => {\n\t\tlet favoritePosts = getFavoritePostsFromLocalStorage();\n\t\tfavoritePosts = favoritePosts.filter((id) => {\n\t\t\treturn id !== action.payload;\n\t\t});\n\t\tsetFavoritePostsInLocalStorage(favoritePosts);\n\t\treturn { ...state, ids: favoritePosts };\n\t};\n\n\tconst getFavoriteIds = () => {\n\t\t// Local storage only supports strings, convert to array.\n\t\tlet favoritePostIds = getFavoritePostsFromLocalStorage();\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tids: favoritePostIds,\n\t\t};\n\t};\n\n\tconst mapPostData = () => {\n\t\treturn {\n\t\t\t...state,\n\t\t\tposts: action.payload?.data?.children?.map((post) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: 't3_' + post.data.id,\n\t\t\t\t\ttitle: post.data.title,\n\t\t\t\t\tauthor: post.data.author,\n\t\t\t\t\tupvotes: post.data.ups,\n\t\t\t\t\tcreated_utc: post.data.created_utc,\n\t\t\t\t};\n\t\t\t}),\n\t\t};\n\t};\n\n\tconst clearFavorites = () => {\n\t\tlocalStorage.removeItem('favoritePosts');\n\t\treturn { ...state, posts: [], ids: [] };\n\t};\n\n\tconst toggleFavorites = () => {\n\t\treturn { ...state, opened: !state.opened };\n\t};\n\n\tconst getFavoritePostsFromLocalStorage = () => {\n\t\treturn JSON.parse(localStorage.getItem('favoritePosts')) ?? [];\n\t};\n\n\tconst setFavoritePostsInLocalStorage = (favoritePosts) => {\n\t\tlocalStorage.setItem('favoritePosts', JSON.stringify(favoritePosts));\n\t};\n\n\tswitch (action.type) {\n\t\tcase FavoriteActionTypes.ADD_FAVORITE:\n\t\t\treturn addFavorite();\n\t\tcase FavoriteActionTypes.REMOVE_FAVORITE:\n\t\t\treturn removeFavorite();\n\t\tcase FavoriteActionTypes.GET_FAVORITE_IDS:\n\t\t\treturn getFavoriteIds();\n\t\tcase FavoriteActionTypes.CLEAR_FAVORITES:\n\t\t\treturn clearFavorites();\n\t\tcase FavoriteActionTypes.TOGGLE_FAVORITES:\n\t\t\treturn toggleFavorites();\n\t\tcase FavoriteActionTypes.MAP_FAVORITE_POST_DATA:\n\t\t\treturn mapPostData();\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn state;\n};\n\nexport default FavoritesReducer;\n","//@flow\nimport { PostActionTypes } from 'constants/PostActionTypes';\n\nconst initialState = {\n\tresults: [],\n};\n\nconst PostsReducer = (state = initialState, action) => {\n\tconst mapPostData = () => {\n\t\treturn {\n\t\t\t...state,\n\t\t\tresults: action.payload?.data?.children?.map((post) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: post.data.id,\n\t\t\t\t\ttitle: post.data.title,\n\t\t\t\t\tauthor: post.data.author,\n\t\t\t\t\tupvotes: post.data.ups,\n\t\t\t\t\tcreated_utc: post.data.created_utc,\n\t\t\t\t};\n\t\t\t}),\n\t\t};\n\t};\n\n\tswitch (action.type) {\n\t\tcase PostActionTypes.MAP_POST_DATA:\n\t\t\treturn mapPostData();\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default PostsReducer;\n","//@flow\nimport { createStore, combineReducers } from 'redux';\nimport FavoritesReducer from 'reducers/FavoritesReducer';\nimport PostReducer from 'reducers/PostsReducer';\n\nconst rootReducer = combineReducers({favorites: FavoritesReducer, posts: PostReducer})\nconst store = createStore(rootReducer);\n\nexport default store","//@flow\nconst corsAnywhere = () => {\n    var cors_api_host = 'cors-anywhere.herokuapp.com';\n    var cors_api_url = 'https://' + cors_api_host + '/';\n    var slice = [].slice;\n    var origin = window.location.protocol + '//' + window.location.host;\n    console.log(origin);\n    var open = XMLHttpRequest.prototype.open;\n    XMLHttpRequest.prototype.open = function() {\n        var args = slice.call(arguments);\n        var targetOrigin = /^https?:\\/\\/([^/]+)/i.exec(args[1]);\n        if (targetOrigin && targetOrigin[0].toLowerCase() !== origin &&\n            targetOrigin[1] !== cors_api_host) {\n            args[1] = cors_api_url + args[1];\n        }\n        return open.apply(this, args);\n    };\n};\n\nexport default corsAnywhere;","//@flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'App';\nimport reportWebVitals from 'reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from 'stores/index';\nimport corsAnywhere from 'security';\n\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\ncorsAnywhere();"],"sourceRoot":""}