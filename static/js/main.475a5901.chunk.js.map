{"version":3,"sources":["constants/PostActionTypes.js","actions/PostActions.js","components/SearchBar.js","constants/FavoriteActionTypes.js","actions/FavoriteActions.js","components/ResultCard.js","components/ResultBox.js","components/FavoritesModal.js","components/FavoritesButton.js","views/home.js","App.js","reportWebVitals.js","reducers/FavoritesReducer.js","reducers/PostsReducer.js","stores/index.js","index.js"],"names":["PostActionTypes","PostActions","getPostData","payload","type","axios","require","useStyles","makeStyles","search","width","input","backgroundColor","borderRadius","SearchBar","classes","dispatch","useDispatch","useState","subreddit","setSubreddit","Grid","container","className","justify","alignItems","item","xs","TextField","variant","fullWidth","placeholder","onChange","e","target","value","Button","centerRipple","onClick","event","get","process","then","data","FavoriteActionTypes","FavoriteActions","addFavorite","removeFavorite","getFavoriteIds","clearFavorites","toggleFavorites","getFavoritePostData","link","textDecoration","resultBox","margin","padding","starSvg","fill","stroke","strokeWidth","cursor","marginRight","title","marginBottom","ResultCard","props","href","Paper","alignContent","sm","thumbnail","image","src","alt","lg","Typography","upvotes","author","Date","createdAt","toLocaleString","height","viewBox","xmlns","favorited","postId","d","overflowY","marginBlock","noResults","color","ResultBox","favorites","useSelector","state","ids","useEffect","Box","length","map","post","id","created_utc","includes","default","rootOpen","position","zIndex","closeButton","top","right","closeIcon","FavoritesModal","open","opened","favoritePostIds","favoritePosts","posts","join","catch","error","console","log","rootClosed","CloseOutlined","resultBoxContainer","root","left","WebkitUserSelect","msUserSelect","userSelect","display","starSVG","webkitAnimation","animation","FavoritesButton","Home","results","favoritesModalOpen","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","FavoritesReducer","action","getFavoritePostsIdsFromLocalStorage","push","setFavoritePostsIdsInLocalStorage","concat","favoritePostsIds","filter","children","ups","subreddit_name_prefixed","replaceAll","undefined","localStorage","removeItem","JSON","parse","getItem","setItem","stringify","PostsReducer","replace","rootReducer","combineReducers","PostReducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.475a5901.chunk.js","sourcesContent":["//@flow\nconst GET_POST_DATA = 'GET_POST_DATA';\n\nexport const PostActionTypes = {\n    GET_POST_DATA,\n};","//@flow\nimport {\n    PostActionTypes\n} from 'constants/PostActionTypes';\n\nconst getPostData = (payload) => {\n    return { type: PostActionTypes.GET_POST_DATA, payload };\n};\n\n\nconst PostActions = {\n    getPostData,\n};\n\nexport default PostActions;","// @flow\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { useDispatch } from 'react-redux';\nimport PostActions from 'actions/PostActions';\nimport { Button, Grid, TextField } from '@material-ui/core';\nconst axios = require('axios');\n\nconst useStyles = makeStyles({\n\tsearch: {\n\t\twidth: '80%',\n\t},\n    input: {\n        backgroundColor: 'white',\n        borderRadius: '10px',\n    },\n});\n\nconst SearchBar = () => {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n    const [subreddit, setSubreddit] = useState('all');\n\n\tconst onSubredditSearch = (event) => {\n\t\treturn axios\n\t\t\t.get(\n\t\t\t\tprocess.env.REACT_APP_REDDIT_API_URL +\n\t\t\t\t\t'r/' +\n\t\t\t\t\tsubreddit +\n\t\t\t\t\t'/hot.json?limit=10'\n\t\t\t)\n\t\t\t.then(({ data }) => {\n\t\t\t\tdispatch(PostActions.getPostData(data));\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.search} justify='space-between' alignItems='center'>\n\t\t\t<Grid item xs={8}>\n\t\t\t\t<TextField variant='filled' fullWidth type='text' placeholder='Search a subreddit' className={classes.input} onChange={e => setSubreddit(e.target.value)} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={3}>\n\t\t\t\t<Button variant='contained' fullWidth centerRipple onClick={onSubredditSearch}>\n\t\t\t\t\tSearch\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default SearchBar;\n","//@flow\nexport const ADD_FAVORITE = 'ADD_FAVORITE';\nexport const GET_FAVORITE_IDS = 'GET_FAVORITES';\nexport const CLEAR_FAVORITES = 'CLEAR_FAVORITES';\nexport const TOGGLE_FAVORITES = 'TOGGLE_FAVORITES';\nexport const REMOVE_FAVORITE = 'REMOVE_FAVORITE';\nexport const GET_FAVORITE_POST_DATA  = 'GET_FAVORITE_POST_DATA';\n\nexport const FavoriteActionTypes = {\n\tADD_FAVORITE,\n\tGET_FAVORITE_IDS,\n\tCLEAR_FAVORITES,\n\tTOGGLE_FAVORITES,\n\tREMOVE_FAVORITE,\n    GET_FAVORITE_POST_DATA,\n};\n","//@flow\nimport {\n    FavoriteActionTypes\n} from 'constants/FavoriteActionTypes';\n\nconst addFavorite = (payload) => {\n\treturn { type: FavoriteActionTypes.ADD_FAVORITE, payload };\n};\n\nconst removeFavorite = (payload) => {\n\treturn { type: FavoriteActionTypes.REMOVE_FAVORITE, payload };\n};\n\nconst getFavoriteIds = (payload) => {\n\treturn { type: FavoriteActionTypes.GET_FAVORITE_IDS, payload };\n};\n\nconst clearFavorites = (payload) => {\n\treturn { type: FavoriteActionTypes.CLEAR_FAVORITES, payload };\n};\n\nconst toggleFavorites = (payload) => {\n\treturn { type: FavoriteActionTypes.TOGGLE_FAVORITES, payload };\n};\n\nconst getFavoritePostData = (payload) => {\n    return {type: FavoriteActionTypes.GET_FAVORITE_POST_DATA, payload};\n};\n\nconst FavoriteActions = {\n    addFavorite,\n    removeFavorite,\n    getFavoriteIds,\n    clearFavorites,\n    toggleFavorites,\n    getFavoritePostData,\n};\n\nexport default FavoriteActions;","// @flow\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport FavoriteActions from 'actions/FavoriteActions';\n\nconst useStyles = makeStyles({\n\tlink: {\n\t\ttextDecoration: 'none',\n\t},\n\tresultBox: {\n\t\tbackgroundColor: '#e3e3e3',\n\t\tborderRadius: '5px',\n\t\tmargin: '10px',\n\t\tpadding: '10px',\n\t},\n\tstarSvg: {\n\t\tfill: 'white',\n\t\tstroke: 'black',\n\t\tstrokeWidth: 5,\n\t\tcursor: 'pointer',\n        marginRight: '20px',\n\t},\n\ttitle: {\n\t\tmarginBottom: '10px',\n\t},\n});\n\nconst ResultCard = (props) => {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst onStarClick = () => {\n\t\tif (!props.favorited) {\n\t\t\tdispatch(FavoriteActions.addFavorite(props.postId));\n\t\t} else {\n\t\t\tdispatch(FavoriteActions.removeFavorite(props.postId));\n\t\t}\n\t};\n\n\tconst getFormattedDate = () => {\n\t\tlet date = new Date(props.createdAt * 1000);\n\t\treturn date.toLocaleString();\n\t};\n\n\treturn (\n\t\t<Grid container alignItems='center'>\n\t\t\t<Grid item xs={11}>\n\t\t\t\t<a href={props.link} className={classes.link}>\n\t\t\t\t\t<Paper className={classes.resultBox}>\n\t\t\t\t\t\t<Grid container alignContent='center'>\n\t\t\t\t\t\t\t<Grid item sm={12}>\n                                \n\t\t\t\t\t\t\t\t{typeof props.thumbnail !== 'undefined' ? (\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tclassName={classes.image}\n\t\t\t\t\t\t\t\t\t\tsrc={props.thumbnail}\n\t\t\t\t\t\t\t\t\t\talt={'thumbnail'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item container>\n\t\t\t\t\t\t\t\t<Grid item container>\n\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\tlg={12}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h5'>\n\t\t\t\t\t\t\t\t\t\t\t{props.title}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item container justify='space-around'>\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={4}>\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\t\t\t\t\t\t\t\t{props.upvotes} <b>Upvotes</b>\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={4}>\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Posted by:</b> {props.author}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item lg={4}>\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Created On: </b>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t{getFormattedDate()}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Paper>\n\t\t\t\t</a>\n\t\t\t</Grid>\n\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<svg\n\t\t\t\t\twidth='48'\n\t\t\t\t\theight='46'\n\t\t\t\t\tviewBox='0 0 48 46'\n\t\t\t\t\tfill='none'\n\t\t\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\t\t\tonClick={onStarClick}\n\t\t\t\t\tclassName={classes.starSvg}\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td='M24 3.23607L28.6618 17.5836L28.8863 18.2746H29.6129H44.6987L32.494 27.1418L31.9062 27.5689L32.1307 28.2599L36.7925 42.6074L24.5878 33.7401L24 33.3131L23.4122 33.7401L11.2075 42.6074L15.8693 28.2599L16.0938 27.5689L15.506 27.1418L3.30127 18.2746H18.3871H19.1137L19.3382 17.5836L24 3.23607Z'\n\t\t\t\t\t\tstroke='black'\n\t\t\t\t\t\tstrokeWidth='2'\n\t\t\t\t\t\tfill={props.favorited ? 'gold' : 'white'}\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default ResultCard;\n","// @flow\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport ResultCard from 'components/ResultCard';\nimport { Box } from '@material-ui/core';\nimport FavoriteActions from 'actions/FavoriteActions';\n\nconst useStyles = makeStyles({\n\tresultBox: {\n\t\twidth: '80%',\n\t\theight: '500px',\n\t\tbackgroundColor: 'white',\n\t\tborderRadius: '5px',\n\t\toverflowY: 'scroll',\n\t\tmargin: '0 auto',\n\t\tmarginBlock: '20px',\n\t},\n\tnoResults: {\n\t\tcolor: 'black',\n\t},\n});\n\nconst ResultBox = (props) => {\n\tconst classes = useStyles();\n\tconst favorites = useSelector((state) => state.favorites.ids);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(FavoriteActions.getFavoriteIds())\n    }, [])\n\n\treturn (\n\t\t<Box className={classes.resultBox}>\n\t\t\t{props.data?.length > 0 ? (\n\t\t\t\tprops.data.map((post) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ResultCard\n\t\t\t\t\t\t\tkey={post.id + props.id}\n                            postId={post.id}\n                            title={post.title}\n                            author={post.author}\n                            upvotes={post.upvotes}\n                            createdAt={post.created_utc}\n                            link={post.link}\n                            thumbnail={post.thumbnail}\n\t\t\t\t\t\t\tfavorited={favorites.includes(post.id)}\n\t\t\t\t\t\t></ResultCard>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t) : (\n\t\t\t\t<span className={classes.noResults}>No results found.</span>\n\t\t\t)}\n\t\t</Box>\n\t);\n};\n\nexport default ResultBox;\n","//@flow\nimport React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Paper, Box } from '@material-ui/core';\nimport ResultBox from './ResultBox';\nimport { makeStyles } from '@material-ui/styles';\nimport { CloseOutlined } from '@material-ui/icons';\nimport FavoriteActions from 'actions/FavoriteActions';\nconst axios = require('axios').default;\n\nconst useStyles = makeStyles({\n\trootOpen: {\n\t\tbackgroundColor: '#3C3C3C',\n\t\twidth: '75%',\n\t\tposition: 'fixed',\n\t\tzIndex: 1000,\n\t},\n\ttitle: {\n\t\tcolor: 'white',\n\t},\n\tcloseButton: {\n\t\tposition: 'absolute',\n\t\ttop: 10,\n\t\tright: 15,\n\t\tcolor: 'white',\n\t\twidth: '24px',\n\t\theight: '24px',\n\t\tborderRadius: '10px',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: 'gray',\n\t\t},\n\t\t'&:active': {\n\t\t\tbackgroundColor: '#282c34',\n\t\t},\n\t},\n\tcloseIcon: {\n\t\tmarginBottom: '20px',\n\t},\n});\n\nconst FavoritesModal = () => {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst open = useSelector((state) => state.favorites.opened);\n\tlet favoritePostIds = useSelector((state) => state.favorites.ids);\n\tlet favoritePosts = useSelector((state) => state.favorites.posts);\n\n\tuseEffect(() => {\n        dispatch(FavoriteActions.getFavoriteIds())\n\t\tif (favoritePostIds.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\taxios\n\t\t\t.get(\n\t\t\t\tprocess.env.REACT_APP_REDDIT_API_URL +\n\t\t\t\t\t'/by_id/' +\n\t\t\t\t\tfavoritePostIds.join(',') +\n\t\t\t\t\t'.json'\n\t\t\t)\n\t\t\t.then(({ data }) => {\n\t\t\t\tdispatch(FavoriteActions.getFavoritePostData(data));\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n    }, []);\n\n\treturn (\n\t\t<Paper className={open ? classes.rootOpen : classes.rootClosed}>\n\t\t\t<div\n\t\t\t\tclassName={classes.closeButton}\n\t\t\t\tonClick={() => dispatch(FavoriteActions.toggleFavorites())}\n\t\t\t>\n\t\t\t\t<CloseOutlined className={classes.closeIcon}></CloseOutlined>\n\t\t\t</div>\n\t\t\t<h1 className={classes.title}>Your Favorite Posts</h1>\n\t\t\t<Box className={classes.resultBoxContainer}>\n\t\t\t\t<ResultBox data={favoritePosts} id={'favorites'}></ResultBox>\n\t\t\t</Box>\n\t\t</Paper>\n\t);\n};\n\nexport default FavoritesModal;\n","//@flow\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport { Box } from '@material-ui/core';\nimport FavoriteActions from 'actions/FavoriteActions';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tposition: 'absolute',\n\t\ttop: 10,\n\t\tleft: 10,\n\t\tbackgroundColor: '#3C3C3C',\n\t\tborderRadius: 10,\n        \"&:hover\": {\n            backgroundColor: 'gray',\n        },\n        WebkitUserSelect: 'none',\n        msUserSelect: 'none',\n        userSelect: 'none',\n        padding: '5px',\n        display: 'flex',\n        alignItems: 'center',\n\t},\n\tstarSVG: {\n\t\twebkitAnimation: 'breathing 2s ease-out infinite',\n\t\tanimation: 'breathing 2s ease-out infinite',\n\t},\n});\n\nconst FavoritesButton = () => {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Box\n\t\t\tclassName={classes.root}\n\t\t\tonClick={() => dispatch(FavoriteActions.toggleFavorites())}\n\t\t>\n\t\t\t<svg\n\t\t\t\twidth='48'\n\t\t\t\theight='46'\n\t\t\t\tviewBox='0 0 48 46'\n\t\t\t\tfill='none'\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\t\tclassName={classes.starSVG}\n\t\t\t>\n\t\t\t\t<path\n\t\t\t\t\td='M24 3.23607L28.6618 17.5836L28.8863 18.2746H29.6129H44.6987L32.494 27.1418L31.9062 27.5689L32.1307 28.2599L36.7925 42.6074L24.5878 33.7401L24 33.3131L23.4122 33.7401L11.2075 42.6074L15.8693 28.2599L16.0938 27.5689L15.506 27.1418L3.30127 18.2746H18.3871H19.1137L19.3382 17.5836L24 3.23607Z'\n\t\t\t\t\tstroke='black'\n\t\t\t\t\tstrokeWidth='2'\n\t\t\t\t\tfill='gold'\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t\t<span>Favorite Posts</span>\n\t\t</Box>\n\t);\n};\n\nexport default FavoritesButton;\n","//@flow\nimport React, { useEffect } from 'react';\nimport SearchBar from 'components/SearchBar';\nimport ResultBox from 'components/ResultBox';\nimport FavoritesModal from 'components/FavoritesModal';\nimport FavoritesButton from 'components/FavoritesButton';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostActions from 'actions/PostActions';\nconst axios = require('axios').default;\n\nconst Home = () => {\n\tconst posts = useSelector((state) => state.posts.results);\n\tconst dispatch = useDispatch();\n\tconst favoritesModalOpen = useSelector((state) => state.favorites.opened);\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(process.env.REACT_APP_REDDIT_API_URL + 'r/all/hot.json?limit=10')\n\t\t\t.then(({ data }) => {\n\t\t\t\tdispatch(PostActions.getPostData(data));\n\t\t\t}).catch(error => {\n                console.log(error);\n            });\n\t}, []);\n\n\treturn (\n\t\t<header className='App-header'>\n\t\t\t<FavoritesButton></FavoritesButton>\n\t\t\t{favoritesModalOpen ? <FavoritesModal></FavoritesModal> : <></>}\n\t\t\t<SearchBar></SearchBar>\n\t\t\t<ResultBox data={posts} id={'posts'}></ResultBox>\n\t\t</header>\n\t);\n};\n\nexport default Home;\n","//@flow\nimport React from 'react';\nimport './App.css';\nimport Home from 'views/home';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Home></Home>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","//@flow\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//@flow\nimport { FavoriteActionTypes } from 'constants/FavoriteActionTypes';\n\nconst initialState = {\n\tids: [],\n\tposts: [],\n\topened: false,\n};\n\nconst FavoritesReducer = (state = initialState, action) => {\n\tconst addFavorite = () => {\n\t\t// Local storage only supports strings, convert json array to string.\n\t\tlet favoritePosts = getFavoritePostsIdsFromLocalStorage() ?? [];\n\t\tif (!favoritePosts.includes(action.payload)) {\n\t\t\tfavoritePosts.push(action.payload);\n\t\t}\n\t\tsetFavoritePostsIdsInLocalStorage(favoritePosts);\n\t\treturn {\n\t\t\t...state,\n\t\t\tids: state.ids.concat(action.payload),\n\t\t};\n\t};\n\n\tconst removeFavorite = () => {\n\t\tconst favoritePostsIds = getFavoritePostsIdsFromLocalStorage().filter(\n\t\t\t(id) => {\n\t\t\t\treturn id !== action.payload;\n\t\t\t}\n\t\t);\n\t\tsetFavoritePostsIdsInLocalStorage(favoritePostsIds);\n\t\treturn {\n\t\t\t...state,\n\t\t\tids: favoritePostsIds,\n            posts: state.posts.filter((post) => {return post.id !== action.payload})\n\t\t};\n\t};\n\n\tconst getFavoriteIds = () => {\n\t\treturn {\n\t\t\t...state,\n\t\t\tids: getFavoritePostsIdsFromLocalStorage(),\n\t\t};\n\t};\n\n\tconst getFavoritePostData = () => {\n\t\treturn {\n\t\t\t...state,\n\t\t\tposts: action.payload?.data?.children?.map((post) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: 't3_' + post.data.id,\n\t\t\t\t\ttitle: post.data.title,\n\t\t\t\t\tauthor: post.data.author,\n\t\t\t\t\tupvotes: post.data.ups,\n\t\t\t\t\tcreated_utc: post.data.created_utc,\n                    link: process.env.REACT_APP_REDDIT_API_URL + post.data.subreddit_name_prefixed + '/comments/' + post.data.id + post.data.title.replaceAll(' ', '_'),\n                    thumbnail: post.data.thumbnail === 'self' || post.data.thumbnail === 'default' ? undefined : post.data.thumbnail,\n\t\t\t\t};\n\t\t\t}),\n\t\t};\n\t};\n\n\tconst clearFavorites = () => {\n\t\tlocalStorage.removeItem('favoritePosts');\n\t\treturn { ...state, posts: [], ids: [] };\n\t};\n\n\tconst toggleFavorites = () => {\n\t\treturn { ...state, opened: !state.opened };\n\t};\n\n\tconst getFavoritePostsIdsFromLocalStorage = () => {\n\t\treturn JSON.parse(localStorage.getItem('favoritePosts')) ?? [];\n\t};\n\n\tconst setFavoritePostsIdsInLocalStorage = (favoritePosts) => {\n\t\tlocalStorage.setItem('favoritePosts', JSON.stringify(favoritePosts));\n\t};\n\n\tswitch (action.type) {\n\t\tcase FavoriteActionTypes.ADD_FAVORITE:\n\t\t\treturn addFavorite();\n\t\tcase FavoriteActionTypes.REMOVE_FAVORITE:\n\t\t\treturn removeFavorite();\n\t\tcase FavoriteActionTypes.GET_FAVORITE_IDS:\n\t\t\treturn getFavoriteIds();\n\t\tcase FavoriteActionTypes.CLEAR_FAVORITES:\n\t\t\treturn clearFavorites();\n\t\tcase FavoriteActionTypes.TOGGLE_FAVORITES:\n\t\t\treturn toggleFavorites();\n\t\tcase FavoriteActionTypes.GET_FAVORITE_POST_DATA:\n\t\t\treturn getFavoritePostData();\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn state;\n};\n\nexport default FavoritesReducer;\n","//@flow\nimport { PostActionTypes } from 'constants/PostActionTypes';\n\nconst initialState = {\n\tresults: [],\n    subreddit: '',\n};\n\nconst PostsReducer = (state = initialState, action) => {\n\tconst getPostData = () => {\n\t\treturn {\n\t\t\t...state,\n\t\t\tresults: action.payload?.data?.children?.map((post) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: 't3_' + post.data.id,\n\t\t\t\t\ttitle: post.data.title,\n\t\t\t\t\tauthor: post.data.author,\n\t\t\t\t\tupvotes: post.data.ups,\n\t\t\t\t\tcreated_utc: post.data.created_utc,\n                    link: process.env.REACT_APP_REDDIT_API_URL + post.data.subreddit_name_prefixed + '/comments/' + post.data.id.replace('t3_', '') + '/' + post.data.title.replaceAll(' ', '_',),\n                    thumbnail: post.data.thumbnail === 'self' || post.data.thumbnail === 'default' ? undefined : post.data.thumbnail,\n\t\t\t\t};\n\t\t\t}),\n\t\t};\n\t};\n\n\tswitch (action.type) {\n\t\tcase PostActionTypes.GET_POST_DATA:\n\t\t\treturn getPostData();\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default PostsReducer;\n","//@flow\nimport { createStore, combineReducers } from 'redux';\nimport FavoritesReducer from 'reducers/FavoritesReducer';\nimport PostReducer from 'reducers/PostsReducer';\n\nconst rootReducer = combineReducers({favorites: FavoritesReducer, posts: PostReducer})\nconst store = createStore(rootReducer);\n\nexport default store","//@flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'App';\nimport reportWebVitals from 'reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from 'stores/index';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}